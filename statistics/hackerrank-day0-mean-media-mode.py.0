#!/bin/env python3
"""
mean = a.k.a. average. sum all, divide by count


median = midpoint value of
a data set for which an equal number of samples are less than and greater
than the value. For an odd sample size, this is the middle element of
the sorted sample; for an even sample size, this is the average of the
2 middle elements of the sorted sample.

mode = element(s) that occur most frequently in a data set. If not number
in the set appears more times than 1 then every number in the set is a
valid mode and it is considered multimodal.

precision = number of sig figs.  scale = number of sig figs to the right
of the decimal point.

INPUT: 2 lines
 1 int N number of elements in the array 1 n space separated integers
 describing the array's elements

Constraints:
     10 <= N <= 2500 0 < x_i <= 10**5, where x_i is the i_th element of
     the array
OUTPUT: 3 lines
 mean, scale of 1 decimal place median, scale of 1 decimal place mode,
 if more than one such value exists print the numerically smallest one.


"""


def get_mean(a):
    total = 0
    count = 0
    
    for i in a:
        total += i
    count = len(a)
    return round(total/count, 1)


def get_median(a):
    a.sort()
    count = len(a)
    mid = count // 2
    if count % 2 == 0:
        return round((a[mid] + a[mid - 1]) / 2, 1)
    else:
        return round(a[mid], 1)


def get_mode(a):
    return 1


if __name__ == '__main__':
    n = input()
    array = list(map(int, input().split()))
    # print(repr(array))
    print(get_mean(array))
    print(get_median(array))
    print(get_mode(array))
